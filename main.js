!function(){"use strict";class e{constructor(e,t){this.parentEl=e,this.value=t}static get selector(){return".card"}getCoords(e){const t=e.getBoundingClientRect();return{top:t.top+window.scrollY,left:t.left+window.scrollX}}bindToDOM(){const e=`\n            <div class="card">\n            ${this.value}\n            <div class="delete"></div>\n            </div>\n        `;this.parentEl.querySelector(".cards").insertAdjacentHTML("beforeend",e)}}class t{constructor(e){this.parentEl=e}static get markup(){return'\n        <form class="new-card">\n         <textarea class="text" placeholder="Enter a title for this card..."></textarea>\n         <div class="new-card-footer">\n         <button class="submit">Add Card </button>\n         <div class="cross">&#x2573</div>\n         </div>\n         </form>\n        '}static get crossSelector(){return".cross"}static get selector(){return".new-card"}static get textSelector(){return".text"}static get footerSel(){return".column-footer"}bindToDOM(){this.parentEl.insertAdjacentHTML("beforeend",t.markup),this.element=this.parentEl.querySelector(t.selector),this.cross=this.element.querySelector(t.crossSelector),this.text=this.parentEl.querySelector(t.textSelector);const n=e=>{e.preventDefault();const n=this.parentEl.querySelector(t.footerSel);e.target.closest(".new-card").remove(),n.classList.remove("hidden")};this.cross.addEventListener("click",n),this.element.addEventListener("submit",(s=>{s.preventDefault();const o=this.element.querySelector(t.textSelector),r=o.closest(".column");new e(r,o.value).bindToDOM(),n(s)}))}}class n{constructor(e,t){this.title=e,this.number=t}static get selector(){return".column-footer"}bindToDOM(){const e=`\n      <div class="column ${this.number}">\n        <h2 class="column-title">\n        <div class="title">${this.title}</div>\n        <div class="points">&#8943</div>\n        </h2>\n        <div class="cards"></div>\n        <div class="column-footer">&#43 Add another card</div>\n      </div>\n    `,t=document.querySelector(".container");t.insertAdjacentHTML("beforeend",e),this.elements=t.querySelectorAll(n.selector),this.elements.forEach((e=>e.addEventListener("click",this.onClick)))}onClick(e){e.preventDefault();const n=e.target,s=e.target.closest(".column");new t(s).bindToDOM(),n.classList.add("hidden")}}const s=new n("To do","first"),o=new n("In Progress","second"),r=new n("Done","third");s.bindToDOM(),o.bindToDOM(),r.bindToDOM();const c=document.querySelectorAll(".cards");let l,i,d;const a=e=>{e.remove()};c.forEach((e=>e.addEventListener("mousedown",(e=>{if(e.preventDefault(),e.target.classList.contains("delete"))return void a(e.target.closest(".card"));d=e.target.cloneNode(!0),d.classList.remove("card"),d.classList.add("saved"),d.style.height=e.target.offsetHeight+"px",d.style.width=e.target.offsetWidth+"px",d.querySelector(".delete").remove(),d.textContent="",e.target.insertAdjacentElement("afterend",d),l=e.target.cloneNode(!0),l.classList.remove("card"),l.classList.add("additional"),l.style.height=e.target.offsetHeight+"px",l.style.width=e.target.offsetWidth+"px",l.querySelector(".delete").remove(),l.textContent="",i=e.target,document.body.style.cursor="grabbing";let t=e.clientX-i.getBoundingClientRect().left,n=e.clientY-i.getBoundingClientRect().top;i.classList.add("dragged"),document.body.append(i),o(e.pageX,e.pageY);const s=e=>{const t=document.querySelector(".additional"),n=document.querySelector(".saved");t?(t.insertAdjacentElement("beforebegin",i),a(t)):n.insertAdjacentElement("beforebegin",i),a(n),document.body.style.cursor="default",i.classList.remove("dragged"),i=void 0,l=void 0,document.documentElement.removeEventListener("mouseup",s),document.documentElement.removeEventListener("mousemove",r)};function o(e,s){i.style.left=e-t+"px",i.style.top=s-n+"px"}const r=e=>{const t=e.target,{top:n}=t.getBoundingClientRect(),s=n+t.offsetHeight/2,r=e.target.closest(".column");if(!r)return;const c=r.querySelector(".cards");if(t.classList.contains("card"))e.clientY<s?t.insertAdjacentElement("beforebegin",l):e.clientY>s&&(console.log(t,"from second"),t.insertAdjacentElement("afterend",l));else if(t.classList.contains("cards")){const n=t.querySelectorAll(".card"),s=[];n.forEach((e=>{s.push(e.getBoundingClientRect().top)}));const o=s.findIndex((t=>t>e.clientY));c.insertBefore(l,n[o])}else{if(e.target.classList.contains("additional"))return;c.appendChild(l)}o(e.clientX,e.clientY)};document.documentElement.addEventListener("mouseup",s),document.documentElement.addEventListener("mousemove",r)})))),window.addEventListener("beforeunload",(()=>{const e={firstCol:[],secondCol:[],thirdCol:[]};c.forEach((t=>{t.hasChildNodes()&&t.querySelectorAll(".card").forEach((t=>{t.closest(".column").classList.contains("first")?e.firstCol.push(t.innerText):t.closest(".column").classList.contains("second")?e.secondCol.push(t.innerText):e.thirdCol.push(t.innerText)}))})),localStorage.setItem("data",JSON.stringify(e))})),document.addEventListener("DOMContentLoaded",(()=>{const t=localStorage.getItem("data"),n=document.querySelector(".first"),s=document.querySelector(".second"),o=document.querySelector(".third");let r;try{r=JSON.parse(t)}catch(e){console.log(e)}r&&(r.firstCol.forEach((t=>{new e(n,t).bindToDOM()})),r.secondCol.forEach((t=>{new e(s,t).bindToDOM()})),r.thirdCol.forEach((t=>{new e(o,t).bindToDOM()})))}))}();